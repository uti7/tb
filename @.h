/* configured for Linux fy7 4.19.128-microsoft-standard #1 SMP Tue Jun 23 12:58:10 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux */
#ifndef _ATM_H_
#define _ATM_H_
/*	
  generic header that according to arch.
  this file is automaticaly generated by configure(shell script).
*/

#include <stdio.h>
#include <stdlib.h>
#include <stdint.h> /* 2013-03-25 tb14c */
#include <string.h>
#include <getopt.h> /* 2021-10-22 tb15 ttba-rev.2.1 */
#if 0
#include <strings.h>
#endif
#ifdef __cplusplus
# include <iostream>
# include <fstream>
# include <iomanip>
# ifdef __BORLANDC__
#   include <strstrea.h>
# else
#   include <strstream>
#   if __GNUG__ < 3
#     include <stdiostream.h>
#   else
#     include <ext/stdio_filebuf.h>
#   endif
# endif
#endif
#include <sys/types.h>
#include <sys/stat.h>
/*
#include <fcntl.h>
*/
#include <wctype.h>
#ifndef __BORLANDC__
#include <unistd.h>
#endif
#include <errno.h>
#if !defined(__BORLANDC__) && !defined(__GNUC__) && !defined(__GNUG__)
# include <sys/errno.h>
#endif
#include <assert.h>
#include <time.h>
#include <signal.h>

#include <ctype.h>
#include <wchar.h>
#if 1
#include <wctype.h>
#endif
#if 0
#include <widec.h>
#endif
#include <locale.h>


#ifdef __BORLANDC__
#define NO_GETOPT
#endif

#ifndef __GNUG__
#define __FUNCTION__	"unknown-function"
#endif

#ifdef __cplusplus
using namespace std;
#endif

#ifdef TESTER
#define _C_	,
#ifndef _INCLUDE_POSIX_SOURCE
#define __(ecd)	printf("exit.\n";exit(ecd);}
#endif
#define _(ecd)	return(ecd);}
#define __C_	_C_
#define ___C_	__C_
#define _P_	public
#define _PP_	protected
#define _PPP_	private
#ifndef __BORLANDC__
#define _T  template
#endif
#define _V	virtual
#define _ret	return
#define _retc	return;}
#define BS	BUFSIZ
#define CC	class
#define C(id,pub,pro,pri)	class id {public: pub;protected: pro; private: pri; };
#ifdef __cplusplus
#define CA(cond,msg) if((cond)){cerr << "Usage: " << msg;exit(2);}
#else
#define CA(cond,msg) if((cond)){fprintf(stderr,"Usage: ");\
                      fprintf(stderr,msg);exit(2);}
#endif
#define DM(val)	debug_print(__FILE__,__LINE__,__FUNCTION__,val);
#define DB(name,nel)  char name[nel],*p ## name = name;
#define E	stderr
#define F(max,proc)	for(UL i=0;i < max;i++){ proc }
#define MS(buf,val)	memset((void *)buf,val,sizeof(*buf));
#define FP	fprintf
typedef int	I;
#define IE(exp,truep,falsep)	if((exp)){truep;}else{falsep;}
#define LP(proc)	while(1){proc;}
#ifdef __cplusplus
#define	M main(int c,char **v){c=c;v=v;
#define	MC(cond,msg)	main(int c,char **v){ CA(cond,msg); v=v;
#else
#define	M main(int c,char **v){c=c;v=v;{
#define	MC(cond,msg)	main(int c,char **v){ CA(cond,msg); v=v;{
#endif
#define	MMM main(){printf("hello.\n");}
#define N	"\n"
#define NNN	<< "\n";
#define O1	cout
#define O2	cerr
#define SO(x)	sizeof(x)
#define P	printf
#define PC	"%1c\n"
#define PC2	"%1c%1c\n"
#define PD	"%d\n"
#define PPD(val)	P(PD,val);
#define PPX(val)	P("%#x\n",val);
#define PPS(val)	P("%s\n",val);
#define PS  "%s\n"
#define PX	"%#x\n"
#define SS	struct
#define S2L(s)  strtoul(s, NULL,0)
typedef unsigned char	UC;
typedef unsigned long UL;
typedef unsigned short US_;
typedef void V;
#ifdef __cplusplus
#define W cout << "end of main.\n";return 0;}
#else
#define W } printf("end of main.\n");return 0;}
#endif


#ifdef __cplusplus
#ifdef DEBUG	/* and c++ only */
inline
void	debug_print(char *f,int l, char *m, char *str){
  cerr << f << ":" << l << ":" << m << ":";
	if(errno){perror(str);}
	else{cerr << str NNN }
}

inline
void	debug_print(char *f,int l, char *m, int v){
  cerr << f << ":" << l << ":" << m << ":" << v << "\n";
}

#else
inline
void	debug_print(char *f,int l, char *m, char *str){}
inline
void	debug_print(char *f,int l, char *m, int v){}
#endif	/* DEBUG */
#endif	/* _cplusplus */

#ifndef SIGSTOP
#define SIGSTOP 19
#endif
#ifndef SIGCONT
#define SIGCONT 18
#endif
#endif /* TESTER */

#endif /* not _ATM_H_ */
